/* @flow */

export type Style = {
  background?: string;
  color?: string;
  decoration?: string;
  hidden?: boolean;
  inverse?: boolean;
  style?: string;
  weight?: string;
}

export type StyledString = {
  attributes: Array<mixed>;
  value: string;
};

export type StyleFormatter = (styled: StyledString, node: StyleNode) => StyledString;

declare export class StyleNode {
  children: Array<StyleNode>;
  style: Style;
  value: ?mixed;
  constructor(value: ?mixed, children?: Array<StyleNode>, style?: Style): this;
  assignStyle(style: Style): this;
  appendChild(node: StyleNode): this;
}

export interface Styler {
  (strings: Array<string>, ...values: Array<mixed>): StyleNode;
  get bgBlack(): Styler;
  get bgBlue(): Styler;
  get bgCyan(): Styler;
  get bgGreen(): Styler;
  get bgMagenta(): Styler;
  get bgRed(): Styler;
  get bgWhite(): Styler;
  get bgYellow(): Styler;
  get black(): Styler;
  get blue(): Styler;
  get bold(): Styler;
  get cyan(): Styler;
  get dim(): Styler;
  get gray(): Styler;
  get green(): Styler;
  get hidden(): Styler;
  get inverse(): Styler;
  get italic(): Styler;
  get magenta(): Styler;
  get red(): Styler;
  get strikethrough(): Styler;
  get underline(): Styler;
  get white(): Styler;
  get yellow(): Styler;
}

declare export class Rainbow {
  constructor(formatter: StyleFormatter): this;
  parse(strings: Array<string>, ...values: Array<mixed>): StyledString;
  format(node: StyleNode): StyledString;
  get bgBlack(): Styler;
  get bgBlue(): Styler;
  get bgCyan(): Styler;
  get bgGreen(): Styler;
  get bgMagenta(): Styler;
  get bgRed(): Styler;
  get bgWhite(): Styler;
  get bgYellow(): Styler;
  get black(): Styler;
  get blue(): Styler;
  get bold(): Styler;
  get cyan(): Styler;
  get dim(): Styler;
  get gray(): Styler;
  get green(): Styler;
  get hidden(): Styler;
  get inverse(): Styler;
  get italic(): Styler;
  get magenta(): Styler;
  get red(): Styler;
  get strikethrough(): Styler;
  get underline(): Styler;
  get white(): Styler;
  get yellow(): Styler;
}

declare export function ansiStyleFormatter(): StyleFormatter;
